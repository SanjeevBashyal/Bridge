{"version":3,"sources":["Components/Logo.js","Components/Header.js","img/bridge.svg","Components/BridgeCalcShow.js","Components/Suspended.js","Components/BridgeInput.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","props","size","id1","id2","useState","colourList","setColourList","interval_tracker","useRef","hsl_value","className","href","onMouseEnter","current","setInterval","val","a","i","push","change","onMouseLeave","clearInterval","console","log","id","data-name","xmlns","width","height","viewBox","x1","y1","x2","y2","offset","stopColor","d","transform","fill","stroke","strokeWidth","Header","BridgeCalcShow","designer","data","cData","cables","border","map","row","l","toFixed","b","h","geometry","g","tension","safety","biter","arr","slice","ele","Array","from","length","Math","floor","v","Suspended","AL","parseFloat","BL","WW","parseInt","useEffect","calculate","sagCalc","EA","bd","gd","lf","bi","gi","Ld","lengthCalc","out","delg","abs","geometryCalc","A","B","eA","eB","bA","yCalc","bB","thetaA","atan","PI","thetaB","profile","y","x","giveCableData","hI","mI","n","cS","cP","cT","cW","cA","tensionCalc","theta","H","cos","AB","ls","TA","area","bl","cs","areaCalc","cableIdentifier","TT","j","cableEstimator","T","loadEst","LC","HL","DL_add","DL","LL","loadCalc","ReactDOM","render","document","getElementById","BridgeInput","src","bridge","alt","title","type","defaultValue","name","value","disabled","onChange","style","float","marginLeft","marginRight","onClick","collectData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.f885e4ba.chunk.js","sourcesContent":["import {useState,useRef} from 'react';\r\nimport './Logo.css'\r\n\r\nconst Logo = (props) => {\r\n    const size=props.size;\r\n    const id1=props.id1;\r\n    const id2=props.id2;\r\n    const [colourList,setColourList]=useState([0,30,60,90,120,150,180,210,240,270,300,330,360]);\r\n    const interval_tracker=useRef(null);\r\n    const hsl_value=useRef(0);\r\n\r\n    const change =()=>{\r\n        let val=hsl_value.current;\r\n        val=val%361;\r\n        // console.log(val);\r\n        let a=[];\r\n        let i=0;\r\n        for (i=0;i<13;i++){\r\n            a.push((val+i*30)%361);\r\n        }\r\n        setColourList(a);\r\n        hsl_value.current=hsl_value.current-5;\r\n    }\r\n\r\n    const runThis=()=>{\r\n        interval_tracker.current= setInterval(function(){change()},90)\r\n    }\r\n\r\n    const clearThis=()=>{\r\n        clearInterval(interval_tracker.current);\r\n        console.log(hsl_value);\r\n        // console.log(\"Mouse leaved\");\r\n    }\r\n\r\n    // useEffect(()=>{\r\n    //     runThis();\r\n    // },[]);\r\n    \r\n    \r\n\r\n\r\n    return ( \r\n        <div className=\"logo_main\">\r\n            <div className=\"logo\">\r\n                <a href=\"https://lichal.com\">\r\n                    <svg onMouseEnter={runThis} onMouseLeave={clearThis} id=\"logo1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 384.765 402.9451\">\r\n                    <defs>\r\n                    <linearGradient id={id1} x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\r\n                        <stop offset=\"0%\" stopColor={\"hsl(\" + colourList[0]+\",100%,50%)\"}/>\r\n                        <stop offset=\"17%\" stopColor={\"hsl(\" + colourList[1]+\",100%,50%)\"}/>\r\n                        <stop offset=\"34%\" stopColor={\"hsl(\" + colourList[2]+\",100%,50%)\"}/>\r\n                        <stop offset=\"50%\" stopColor={\"hsl(\" + colourList[3]+\",100%,50%)\"}/>\r\n                        <stop offset=\"66%\" stopColor={\"hsl(\" + colourList[4]+\",100%,50%)\"}/>\r\n                        <stop offset=\"82%\" stopColor={\"hsl(\" + colourList[5]+\",100%,50%)\"}/>\r\n                        <stop offset=\"100%\" stopColor={\"hsl(\" + colourList[6]+\",100%,50%)\"}/>\r\n                    </linearGradient>\r\n\r\n                    <linearGradient id={id2} x1=\"1\" y1=\"1\" x2=\"0\" y2=\"0\">\r\n                        <stop offset=\"0%\" stopColor={\"hsl(\" + colourList[6]+\",100%,50%)\"}/>\r\n                        <stop offset=\"17%\" stopColor={\"hsl(\" + colourList[7]+\",100%,50%)\"}/>\r\n                        <stop offset=\"34%\" stopColor={\"hsl(\" + colourList[8]+\",100%,50%)\"}/>\r\n                        <stop offset=\"50%\" stopColor={\"hsl(\" + colourList[9]+\",100%,50%)\"}/>\r\n                        <stop offset=\"66%\" stopColor={\"hsl(\" + colourList[10]+\",100%,50%)\"}/>\r\n                        <stop offset=\"82%\" stopColor={\"hsl(\" + colourList[11]+\",100%,50%)\"}/>\r\n                        <stop offset=\"100%\" stopColor={\"hsl(\" + colourList[12]+\",100%,50%)\"}/>\r\n                    </linearGradient>\r\n\r\n                    <linearGradient id=\"hue\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\r\n                        <stop offset=\"0%\" stopColor={\"hsl(\" + 0 +\",50%,50%)\"}/>\r\n                        <stop offset=\"17%\" stopColor={\"hsl(\" + 60 +\",50%,50%)\"}/>\r\n                        <stop offset=\"34%\" stopColor={\"hsl(\" + 120+\",50%,50%)\"}/>\r\n                        <stop offset=\"50%\" stopColor={\"hsl(\" + 180+\",50%,50%)\"}/>\r\n                        <stop offset=\"66%\" stopColor={\"hsl(\" + 240+\",50%,50%)\"}/>\r\n                        <stop offset=\"82%\" stopColor={\"hsl(\" + 300+\",50%,50%)\"}/>\r\n                        <stop offset=\"100%\" stopColor={\"hsl(\" + 360+\",50%,50%)\"}/>\r\n                    </linearGradient>\r\n                    </defs>\r\n                        {/* <title>Lichal Corporation</title> */}\r\n                        <path className=\"cls-1\"\r\n                            d=\"M344,503.8466v79.0985h78.7249a14.1213,14.1213,0,0,0-3.2154-4.5016,15.0558,15.0558,0,0,0-9.6462-3.8584H360.99a11.5637,11.5637,0,0,1-6.4308-3.8585,11.731,11.731,0,0,1-2.5723-8.36v-50.16a12.7606,12.7606,0,0,0-3.2154-5.1446C346.5431,504.898,345.1261,504.1279,344,503.8466Z\"\r\n                            transform=\"translate(-343 -181)\" fill={\"hsl(\" + colourList[3]+\",100%,50%)\"}/>\r\n                        <path className=\"cls-1\"\r\n                            d=\"M356.6621,556.3039V200.6392a22.4463,22.4463,0,0,1,13.7156,15.3233c-.4216,37.796-3.4413,311.7617-.0488,324.5529a23.3063,23.3063,0,0,0,4.0178,8.0384,25.47,25.47,0,0,0,12.0577,7.2347c9.7019,2.6827,129.668,2.5182,299.8346,0a26.6029,26.6029,0,0,1,15.2731,6.4307,25.4209,25.4209,0,0,1,5.6269,7.2346H365.5044a8.8423,8.8423,0,0,1-8.8423-8.8423Z\"\r\n                            transform=\"translate(-343 -181)\" fill={\"url(#\"+id1+\")\"}/>\r\n                        <path className=\"cls-1\"\r\n                            d=\"M726.765,261.0985V182H655.1423a14.2263,14.2263,0,0,0,2.888,4.5015,12.7374,12.7374,0,0,0,8.664,3.8585h43.8978a10.175,10.175,0,0,1,5.776,3.8585,12.7234,12.7234,0,0,1,2.31,8.36v50.16a13.101,13.101,0,0,0,2.888,5.1446A11.1682,11.1682,0,0,0,726.765,261.0985Z\"\r\n                            transform=\"translate(-343 -181)\" fill={\"hsl(\" + colourList[9]+\",100%,50%)\"}/>\r\n                        <path className=\"cls-1\"\r\n                            d=\"M713.57,208.0115V564.48a22.4463,22.4463,0,0,1-13.7156-15.3233c.4216-37.796,3.4414-312.5655.0488-325.3567a23.3086,23.3086,0,0,0-4.0178-8.0385,25.4716,25.4716,0,0,0-12.0577-7.2346c-9.7019-2.6827-130.4718-2.5182-300.6385,0a26.6029,26.6029,0,0,1-15.273-6.4307,25.4222,25.4222,0,0,1-5.627-7.2347H706.2682a7.3016,7.3016,0,0,1,7.3016,7.3016Z\"\r\n                            transform=\"translate(-343 -181)\" fill={\"url(#\"+id2+\")\"} />\r\n                        <path className=\"cls-2\" d=\"M464,284.5726V465.7H646.6\" \r\n                            transform=\"translate(-343 -181)\" fill=\"none\" stroke={\"url(#\"+id1+\")\"} strokeWidth=\"4px\"/>\r\n                        <path className=\"cls-2\"\r\n                            d=\"M646.6,465.7a32.3342,32.3342,0,0,0-7.3629-10.3081c-8.5-7.9293-18.8007-8.72-22.0887-8.8354H505.2323a26.4788,26.4788,0,0,1-14.7258-8.8355,26.8625,26.8625,0,0,1-5.89-19.1436V303.7161A29.07,29.07,0,0,0,464,284.5726\"\r\n                            transform=\"translate(-343 -181)\" fill=\"none\" stroke={\"url(#\"+id2+\")\"} strokeWidth=\"4px\"/>\r\n                        \r\n                        {/* <path\r\n                            d=\"M464,284.5726V465.7H646.6a32.3342,32.3342,0,0,0-7.3629-10.3081c-8.5-7.9293-18.8007-8.72-22.0887-8.8354H505.2323a26.4788,26.4788,0,0,1-14.7258-8.8355,26.8625,26.8625,0,0,1-5.89-19.1436V303.7161A29.07,29.07,0,0,0,464,284.5726Z\"\r\n                            transform=\"translate(-343 -181)\" fill=\"white\" stroke=\"red\" strokeWidth=\"2px\"/> */}\r\n                    </svg>\r\n                </a>\r\n            </div>\r\n            <div className=\"title\">\r\n                <div className=\"lichal\">\r\n                    <label>Lichal</label>\r\n                </div>\r\n                <div className=\"corp\">\r\n                    <label>Corporation</label>\r\n                </div>\r\n            </div>\r\n            \r\n        {/* <button onClick={runThis}>Click Me</button> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Logo;","// import {useState,useRef} from 'react';\r\nimport Logo from './Logo'\r\n\r\nimport './Header.css'\r\n// import MenuButton from './MenuButton'\r\n\r\nconst Header=()=>{\r\n\r\n\r\n    return ( \r\n        <div className=\"header\">\r\n            <Logo size=\"50\" id1=\"hue1\" id2=\"hue2\"/>\r\n            \r\n            {/* <MenuButton/> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","export default __webpack_public_path__ + \"static/media/bridge.a4a4edf2.svg\";","import './BridgeCalcShow.css'\r\n\r\nconst BridgeCalcShow = (props) => {\r\n    const designer=props.designer;\r\n    const data=props.data;\r\n    const cData=props.cData;\r\n    console.log(data);\r\n    return (\r\n        <div className=\"calcShow\">\r\n            <br/>\r\n            <h1>{designer}</h1>\r\n            <h2>A. Cable Selection</h2>\r\n            <p>Main Cables: {cData.cables[2] +\"  𝜙\" + cData.cables[3]}<br/>\r\n            Handrail Cables: {cData.cables[0] +\"  𝜙\" + cData.cables[1]}</p>\r\n            <h2>B. Cable Geometry</h2>\r\n            <table className=\"results\" border=\"1px\">\r\n                <tr>\r\n                    <td>\r\n                        Parameter\r\n                    </td>\r\n                    <td>\r\n                        Unit\r\n                    </td>\r\n                    <td>\r\n                        Dead Load Case\r\n                    </td>\r\n                    <td>\r\n                        Hoisting Load Case\r\n                    </td>\r\n                    <td>\r\n                        Full Load Case\r\n                    </td>\r\n                </tr>\r\n                <tr><td>Span(l)</td><td>m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.l.toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>Sag(b)</td><td>m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.b.toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>Height Difference(h)</td><td>m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.h.toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>Modeling Equation</td><td>m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.geometry[0]}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>eA</td><td>m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.geometry[1].toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>eB</td><td>m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.geometry[2].toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>fA</td><td>m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.geometry[3].toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>fB</td><td>m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.geometry[4].toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>𝜃a</td><td>°</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.geometry[5].toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>𝜃b</td><td>°</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.geometry[6].toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>Load (g)</td><td>kN/m</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.g.toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>Horizontal Tension (H)</td><td>kN</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.tension[0].toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>Maximum Tension (T)</td><td>kN</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.tension[1].toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                <tr><td>Factor of Safety (S)</td><td>N/A</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.safety.toFixed(3)}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n                \r\n            </table>\r\n            <h2>C. Cable Sag Calculation</h2>\r\n            <h4>Calculation of Sag for hoisting load (g)={data[1].g.toFixed(3)} kN/m</h4>\r\n            <table border=\"1px\">\r\n            <tr>\r\n                    <td>\r\n                        Iteration No.\r\n                    </td>\r\n                    <td>\r\n                        bi\r\n                    </td>\r\n                    <td>\r\n                        gi\r\n                    </td>\r\n                    <td>\r\n                        bi+1\r\n                    </td>\r\n                    <td>\r\n                        gh(gf)-gi\r\n                    </td>\r\n                </tr>\r\n                {data[1].biter[0].map(\r\n                    (arr)=>(\r\n                        <tr>\r\n                            <td>{arr[0].toFixed(0)}</td>\r\n                            {arr.slice(1).map((ele)=>(\r\n                                <td>{ele.toFixed(3)}</td>\r\n                            )\r\n\r\n                            )}\r\n                        </tr>\r\n\r\n                    )\r\n                )}\r\n\r\n            </table>\r\n            \r\n            <h3>Calculation of Sag for full load (g)={data[2].g.toFixed(3)} kN/m</h3>\r\n            <table border=\"1px\">\r\n            <tr>\r\n                    <td>\r\n                        Iteration No.\r\n                    </td>\r\n                    <td>\r\n                        bi\r\n                    </td>\r\n                    <td>\r\n                        gi\r\n                    </td>\r\n                    <td>\r\n                        bi+1\r\n                    </td>\r\n                    <td>\r\n                        gh(gf)-gi\r\n                    </td>\r\n                </tr>\r\n                {data[2].biter[0].map(\r\n                    (arr)=>(\r\n                        <tr>\r\n                            <td>{arr[0].toFixed(0)}</td>\r\n                            {arr.slice(1).map((ele)=>(\r\n                                <td>{ele.toFixed(3)}</td>\r\n                            )\r\n\r\n                            )}\r\n                        </tr>\r\n\r\n                    )\r\n                )}\r\n\r\n            </table>\r\n            <h2>D. Cable Profile</h2>\r\n            <table className=\"results\" border=\"1px\">\r\n                <tr>\r\n                    <td>\r\n                        X-Distance\r\n                    </td>\r\n                    <td>\r\n                        Dead Load Profile\r\n                    </td>\r\n                    <td>\r\n                        Hoisting Load Profile\r\n                    </td>\r\n                    <td>\r\n                        Full Load Profile\r\n                    </td>\r\n                </tr>\r\n                {\r\n                    Array.from({length: Math.floor((cData.l-0.001)/10+1)}, (v, i) => i).map((i)=>(\r\n                        <tr>\r\n                                 <td>{10*i}</td>\r\n                            {\r\n                                data.map((row)=>(\r\n                                    <td>{row.geometry[7][i]}</td>\r\n                                )\r\n\r\n                                )\r\n                            }\r\n                        </tr>\r\n                    )\r\n                    )\r\n                }\r\n                <tr>\r\n                            <td>{cData.l}</td>\r\n                    {\r\n                        data.map((row)=>(\r\n                            <td>{row.geometry[7][row.geometry[7].length-1]}</td>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </tr>\r\n            </table>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default BridgeCalcShow;","import React from 'react';\r\nimport { useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport BridgeCalcShow from './BridgeCalcShow';\r\n// import SSTB_D_SVG_Plan from './SSTB_D_SVG_Plan';\r\n\r\nconst Suspended = (props) => {\r\n    const designer=props.designer;\r\n    const AL=parseFloat(props.AL);\r\n    const BL=parseFloat(props.BL);\r\n    const l=parseFloat(props.l);\r\n    const WW=parseInt(props.WW);\r\n\r\n    // console.log(designer,AL,AType,ATower,BL,BType,BTower,l,WW);\r\n    \r\n    useEffect(()=>{\r\n        calculate(designer,AL,BL,l,WW);\r\n    },[designer,AL,BL,l,WW]);\r\n\r\n\r\n    const sagCalc=(EA,l,bd,h,gd,g,lf)=>{\r\n        let bi=bd;\r\n        let gi=gd;\r\n        if(lf===0){\r\n            return [[[1,bi,gi,bi,0]],bi];\r\n        }else if (lf===1){\r\n            bi=0.93*bd;\r\n        }else if (lf===2){\r\n            bi=1.22*bd;\r\n        }\r\n        let Ld=lengthCalc(l,h,bd);\r\n        let out=[];\r\n        let i=1;\r\n        let delg=g-gi;\r\n        do {\r\n            let row=[];\r\n            row.push(i);\r\n            row.push(bi);\r\n            gi=(64*EA)/(3*(l**3)*Ld)*bi*(bi**2-bd**2)+(bi/bd)*gd;\r\n            row.push(gi);\r\n            bi=bd+(bi-bd)*(g-gd)/(gi-gd);\r\n            row.push(bi);\r\n            delg=g-gi;\r\n            row.push(delg);\r\n            out.push(row);\r\n            i=i+1;\r\n        }while(Math.abs(delg)>0.001);\r\n        return [out, bi];\r\n\r\n    }\r\n\r\n    const lengthCalc=(l,h,b)=>{\r\n        return l*(1+(8/3)*(b/l)**2+(1/2)*(h/l)**2);\r\n    }\r\n    \r\n    const geometryCalc=(b,h,l,AL)=>{\r\n        let A=(4*b)/(l**2);\r\n        let B=(h-4*b)/l;\r\n        let eA=(-B)/(2*A);\r\n        let eB=l-eA;\r\n        let bA=yCalc(A,B,eA);\r\n        let bB=bA-h;\r\n        let thetaA=Math.atan((4*b-h)/l)*180/Math.PI;\r\n        let thetaB=Math.atan((4*b+h)/l)*180/Math.PI;\r\n\r\n        let profile=[];\r\n        for(let i=0;i<(l-0.001);i=i+10){\r\n            let y=A*i**2+B*i+AL;\r\n            profile.push(y.toFixed(3));\r\n        }\r\n        let y=A*l**2+B*l+AL;\r\n        profile.push(y);\r\n\r\n        return [A.toFixed(7)+\"x^2\"+B.toFixed(7)+\"x\",eA,eB,bA,bB,thetaA,thetaB,profile];\r\n\r\n    }\r\n    const yCalc=(A,B,x)=>{\r\n        return A*x**2+B*x;\r\n    }\r\n\r\n    const loadCalc=(WW,HL,l)=>{\r\n        let DL_add=null;\r\n        if (WW===70){\r\n            DL_add=0.41;\r\n        }else if (WW===106){\r\n            DL_add=0.56;\r\n        }\r\n        let DL=HL+DL_add;\r\n\r\n        let LL=null;\r\n        if (l<=50){\r\n            LL=4;\r\n        }else if (l>50){\r\n            LL=3+50/l;\r\n        }\r\n        // let WL=0.6;\r\n        let WL=0;\r\n        let FL=DL+LL+WL;\r\n\r\n        return [DL,HL,FL];\r\n\r\n    }\r\n\r\n    const giveCableData=(hI,mI,n)=>{\r\n        let cS=[26,32,36,40];\r\n        let cP=[129,195,247,305];\r\n        let cT=[386,585,740,914];\r\n        let cW=[2.51,3.80,4.81,5.94];\r\n        let cA=[292,442,560,691];\r\n        let A=2*cA[hI]+n*cA[mI];\r\n        let P=2*cP[hI]+n*cP[mI];\r\n        let T=2*cT[hI]+n*cT[mI];\r\n        let W=2*cW[hI]+n*cW[mI];\r\n        return [2,cS[hI],n,cS[mI],W,A,T,P];\r\n    }\r\n\r\n    const cableEstimator=(TT)=>{\r\n        let cP=[129,195,247,305];\r\n        for (let i=0;i<2;i++){\r\n            for (let j=2;j<6;j+=2){\r\n                if((2*cP[0]+j*cP[i])>TT){\r\n                    return giveCableData(0,i,j);\r\n                }\r\n                if((2*cP[i]+j*cP[i])>TT){\r\n                    return giveCableData(i,i,j);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (let i=2;i<3;i++){\r\n            for (let j=2;j<6;j+=2){\r\n                if((2*cP[i-1]+j*cP[i])>TT){\r\n                    return giveCableData(i-1,i,j);\r\n                }\r\n                if((2*cP[i]+j*cP[i])>TT){\r\n                    return giveCableData(i,i,j);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i=3;i<4;i++){\r\n            for (let j=2;j<14;j+=2){\r\n                if((2*cP[i-1]+j*cP[i])>TT){\r\n                    return giveCableData(i-1,i,j);\r\n                }\r\n                if((2*cP[i]+j*cP[i])>TT){\r\n                    return giveCableData(i,i,j);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const loadEst=(l,b)=>{\r\n        let FL=4.3+50/l;\r\n        let H=(FL*(l**2))/(1.2*8*b);\r\n        let T=H/Math.cos(18/180*Math.PI);\r\n        console.log(H,T);\r\n        return T;\r\n    }\r\n\r\n    const tensionCalc=(g,l,b,theta)=>{\r\n        let H=(g*l**2)/(8*b);\r\n        let T=H/Math.cos(theta*Math.PI/180);\r\n        return [H,T];\r\n    }\r\n\r\n    const cableIdentifier=(WW,l)=>{\r\n        if (WW===70){\r\n            if (l<=50){\r\n                return [2,26,2,26,10.04];\r\n            }\r\n            if (l<=90){\r\n                return [2,26,2,32,12.62];\r\n            }\r\n            if (l<=100){\r\n                return [2,26,4,26,15.06];\r\n            }\r\n            if (l<=120){\r\n                return [2,26,4,32,20.22];\r\n            }\r\n        }else if (WW===106){\r\n            if (l<=40){\r\n                return [2,26,2,26,10.04];\r\n            }\r\n            if (l<=60){\r\n                return [2,26,2,32,12.62];\r\n            }\r\n            if (l<=75){\r\n                return [2,26,4,26,15.06];\r\n            }\r\n            if (l<=105){\r\n                return [2,26,4,32,20.22];\r\n            }\r\n            if (l<=120){\r\n                return [2,32,4,32,22.80];\r\n            }\r\n        }\r\n    }\r\n\r\n    const areaCalc=(ls)=>{\r\n        let TA=null;\r\n        let BL=null;\r\n        let i=1;\r\n        for(i=1;i<=2;i++){\r\n            let area=null;\r\n            let bl=null;\r\n            let cs=ls[2*i-1];\r\n            if(cs===13){\r\n                area=73;\r\n                bl=103;\r\n            }else if (cs===26){\r\n                area=292;\r\n                bl=386;\r\n            }else if (cs===32){\r\n                area=442;\r\n                bl=585;\r\n            }else if (cs===36){\r\n                area=560;\r\n                bl=740;\r\n            }else if (cs===40){\r\n                area=691;\r\n                bl=914;\r\n            }\r\n            TA+=ls[2*(i-1)]*area;\r\n            BL+=ls[2*(i-1)]*bl;\r\n        }\r\n        return [TA,BL];\r\n    }\r\n\r\n    const calculate=(designer,AL,BL,l,WW)=>{\r\n        // let warnings=[];\r\n        let b=null;\r\n        let cables=null;\r\n        let h=(BL-AL);\r\n        if(l<120){\r\n            if(l<80){\r\n                b=l/20;\r\n                \r\n            }else if(l>=80) {\r\n                b=l/22;\r\n            }\r\n            cables=cableIdentifier(WW,l);\r\n            let AB=areaCalc(cables);\r\n            cables[5]=AB[0];\r\n            cables[6]=AB[1];\r\n        }\r\n        else if(l>=120){\r\n            b=l/22-h/4;\r\n            let T=loadEst(l,b);\r\n            cables=cableEstimator(T);\r\n        }\r\n        \r\n        \r\n        \r\n        let HL=cables[4]*9.81/1000;\r\n        \r\n        let LC=loadCalc(WW,HL,l);\r\n        let lf=[0,1,2];\r\n        let EA=110*cables[5];\r\n        let i=1;\r\n        let out=[];\r\n        let cData={};\r\n        cData.h=h;\r\n        cData.l=l;\r\n        cData.WW=WW;\r\n        cData.cables=cables;\r\n        // console.log(EA);\r\n        for(i=0;i<3;i++){\r\n            let row={};\r\n            row.l=l;\r\n            row.biter=sagCalc(EA,l,b,h,LC[0],LC[i],lf[i]);\r\n            row.h=h;\r\n            row.b=row.biter[1];\r\n            row.geometry=geometryCalc(row.b,h,l,AL);\r\n            if(h>=0){\r\n                row.theta=row.geometry[6];\r\n            }else{\r\n                row.theta=row.geometry[5];\r\n            }\r\n            row.g=LC[i];\r\n            row.tension=tensionCalc(row.g,l,row.b,row.theta);\r\n            row.safety=cables[6]/row.tension[1];\r\n            out.push(row);\r\n        }\r\n\r\n\r\n        // console.log(out);\r\n        ReactDOM.render(\r\n              <BridgeCalcShow designer={designer} data={out} cData={cData}/>,\r\n            document.getElementById(\"bridgeCalcShow\")\r\n          );\r\n\r\n        // ReactDOM.render(\r\n        //     <SSTB_D_SVG_Plan out={out} data={data}/>,\r\n        //   document.getElementById(\"bridgeSvgPlan\")\r\n        // );\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"bridgeCalc\">\r\n            <div id=\"bridgeCalcShow\"></div><br/><br/>\r\n            <div id=\"bridgeSvgPlan\"></div>\r\n        </div>\r\n        \r\n      );\r\n}\r\n \r\nexport default Suspended;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport bridge from '../img/bridge.svg';\r\nimport Suspended from './Suspended';\r\nimport './BridgeInput.css'\r\n\r\nconst BridgeInput = () => {\r\n\r\n    const collectData=(type)=>{\r\n        if (type===1){\r\n            let designer=document.getElementById(\"designer\").value;\r\n            let AL=document.getElementById(\"A\").value;\r\n            let BL=document.getElementById(\"B\").value;\r\n            let l=document.getElementById(\"Span\").value;\r\n            let WW=document.getElementById(\"walkway\").value;\r\n            ReactDOM.render(\r\n                <Suspended designer={designer} AL={AL} BL={BL} l={l} WW={WW} />,\r\n              document.getElementById('bridge')\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const typeInput=()=>{\r\n        let bridge_type=parseInt(document.getElementById(\"bridgeType\").value);\r\n\r\n        if(bridge_type===1){\r\n            ReactDOM.render(\r\n                <div className=\"bridgeInput\">\r\n                    <div className=\"leftRight\" style={{width:'80%',float:'left',marginLeft:'10%',marginRight:'10%'}}>\r\n                        <div className=\"leftInput\" style={{float:'left'}}>\r\n                            <label>Left Bank Saddle Elevation: </label>\r\n                            <input type=\"number\" id=\"A\"/><br/>\r\n                        </div>\r\n                        <div className=\"rightInput\" style={{float:'right'}}>\r\n                            <label>Right Bank Ground Elevation: </label>\r\n                            <input type=\"number\" id=\"B\"/><br/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"spanInput\">\r\n                    <label>Span: </label>\r\n                        <input type=\"number\" id=\"Span\"/><br/>\r\n                        <label>Walkway Width: </label>\r\n                        <select defaultValue=\"0\" name=\"Walkway\" id=\"walkway\">\r\n                            <option value=\"0\" disabled></option>\r\n                            <option value=\"70\">70 cm</option>\r\n                            <option value=\"106\">106 cm</option>\r\n                        </select><br/><br/>\r\n                        <button onClick={()=>{collectData(1)}}>Calculate</button>\r\n                    </div>\r\n                </div>,\r\n            document.getElementById('bridgeTypeInput')\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"bridgeDesign\">\r\n            <a href=\"/\"><img src={bridge} alt=\"Bridge\" title=\"Bridge\"/></a><br/><br/>\r\n            <label id=\"designerLabel\">Designer: </label>\r\n            <input type=\"text\" id=\"designer\"/><br/>\r\n            <label>Design Type: </label>\r\n            <select defaultValue=\"0\" name=\"Bridge Type\" id=\"designType\">\r\n                <option value=\"0\" disabled></option>\r\n                <option value=\"1\">Cables</option>\r\n            </select><br/>\r\n            <label>Bridge Type: </label>\r\n            <select onChange={typeInput} defaultValue=\"0\" name=\"Bridge Type\" id=\"bridgeType\">\r\n                <option value=\"0\" disabled></option>\r\n                <option value=\"1\">Suspended</option>\r\n                <option value=\"2\">Suspension</option>\r\n            </select><br/><br/>\r\n            <div id=\"bridgeTypeInput\"></div>\r\n            <div id=\"bridge\"></div>\r\n        </div>\r\n        \r\n      );\r\n}\r\n \r\nexport default BridgeInput;","import './App.css';\r\n// import HeaderClass from './Components/HeaderClass'\r\nimport Header from './Components/Header'\r\nimport BridgeInput from './Components/BridgeInput'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <BridgeInput/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import Header from './Components/Header';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <Header/> */}\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}